version: '3.9'

services:
  nginx:
    image: nginx:1.19.2-alpine
    depends_on:
      - minio1
      - minio2

  db_evaluation:
    image: mysql:8.0.27

  db_gamerepo:
    image: mysql:8.0.27

  db_identity:
    image: mcr.microsoft.com/mssql/server:2019-latest

  db_backmanage:
    image: mysql:8.0.27

  mq_evaluation:
    image: rabbitmq:3.9.13-management

  cache_master:
    image: redis:6.2.6
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
        window: 120s

  #gateway_envoy:
  #  image: envoyproxy/envoy:v1.20.2

  gateway_ocelot:
    image: ocelotproxy:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: ApiGateways/Ocelot/OcelotGateway/Dockerfile
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 5
    depends_on:
      - identity-api
      - evaluation-api
      - evaluation-api-2
      - gamerepo-api
      - ordering-api
      - backmanage-api

  consul-server1:
    image: consul:1.9

  consul-server2:
    image: consul:1.9

  consul-server3:
    image: consul:1.9

  consul-client:
    image: consul:1.9

  identity-api:
    image: ${REGISTRY:-esite}/identity.api:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Services/IdentityServer/Identity.API/Dockerfile
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
    depends_on:
      - db_identity
      - mq_evaluation
      - consul-client

  evaluation-api:
    image: ${REGISTRY:-esite}/evaluation.api:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Services/Evaluation/Evaluation.API/Dockerfile
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.type == evaluation-api
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
    depends_on:
      - db_evaluation
      - mq_evaluation
      - identity-api
      - consul-client

  evaluation-api-2:
    image: ${REGISTRY:-esite}/evaluation.api:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Services/Evaluation/Evaluation.API/Dockerfile
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.type == evaluation-api-2
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
    depends_on:
      - db_evaluation
      - mq_evaluation
      - identity-api
      - consul-client

  gamerepo-api:
    image: ${REGISTRY:-esite}/gamerepo.api:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Services/GameRepository/GameRepo.API/Dockerfile
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
    depends_on:
      - cache_master
      - db_gamerepo
      - mq_evaluation
      - identity-api
      - consul-client

  ordering-api:
    image: ${REGISTRY:-esite}/ordering.api:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Services/Ordering/Ordering.API/Dockerfile
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
    depends_on:
      - cache_master
      - identity-api
      - consul-client

  backmanage-api:
    image: ${REGISTRY:-esite}/backmanage.api:${PLATFORM:-linux}-${TAG:-latest}
    build:
      context: .
      dockerfile: Services/BackManager/BackManage.API/Dockerfile
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 3
    depends_on:
      - db_backmanage
      - identity-api
      - consul-client

  #webstatus:
  #  image: ${REGISTRY:-esite}/webstatus:${PLATFORM:-linux}-${TAG:-latest}
  #  build:
  #    context: .
  #    dockerfile: Web/WebStatus/Dockerfile

// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Zhouxieyi.evaluationSiteOnContainers.Services.BackManage.API.Infrastructure;

#nullable disable

namespace BackManage.API.Infrastructure.BackManageMigrations
{
    [DbContext(typeof(BackManageContext))]
    [Migration("20220220042420_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Zhouxieyi.evaluationSiteOnContainers.Services.BackManage.API.Models.ApproveRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("approve_id")
                        .HasComment("主键");

                    b.Property<DateTime>("ApplyTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime(6)")
                        .HasDefaultValue(new DateTime(2022, 2, 20, 12, 24, 20, 842, DateTimeKind.Local).AddTicks(2862))
                        .HasColumnName("apply_time")
                        .HasComment("申请时间");

                    b.Property<int>("ApproveInfoId")
                        .HasColumnType("int")
                        .HasColumnName("a_info_id")
                        .HasComment("审批信息id");

                    b.Property<DateTime?>("ApproveTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("approve_time")
                        .HasComment("审批时间");

                    b.Property<string>("ApproveUser")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("approve_user")
                        .HasComment("审批人");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("approve_body")
                        .HasComment("测评审批信息正文");

                    b.Property<int>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("approve_status")
                        .HasComment("审批状态");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("user_id")
                        .HasComment("申请用户id");

                    b.HasKey("Id");

                    b.ToTable("approve_record");

                    b.HasComment("测评资格申请表");
                });

            modelBuilder.Entity("Zhouxieyi.evaluationSiteOnContainers.Services.BackManage.API.Models.BannedInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("b_info_id")
                        .HasComment("主键");

                    b.Property<int>("BannedRecordId")
                        .HasColumnType("int")
                        .HasColumnName("banned_id")
                        .HasComment("举报审核外键");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)")
                        .HasColumnName("banned_body")
                        .HasComment("举报信息正文");

                    b.HasKey("Id");

                    b.HasIndex("BannedRecordId");

                    b.ToTable("banned_info");

                    b.HasComment("用户举报内容信息表");
                });

            modelBuilder.Entity("Zhouxieyi.evaluationSiteOnContainers.Services.BackManage.API.Models.BannedRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("banned_id")
                        .HasComment("主键");

                    b.Property<string>("ApproveUser")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("approve_user")
                        .HasComment("审批人");

                    b.Property<DateTime?>("BannedTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("banned_time")
                        .HasComment("冻结时间");

                    b.Property<int>("ReportCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("report_count")
                        .HasComment("被举报次数");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("user_id")
                        .HasComment("被举报用户id");

                    b.HasKey("Id");

                    b.ToTable("banned_record");

                    b.HasComment("用户举报记录表");
                });

            modelBuilder.Entity("Zhouxieyi.evaluationSiteOnContainers.Services.BackManage.API.Models.BannedInfo", b =>
                {
                    b.HasOne("Zhouxieyi.evaluationSiteOnContainers.Services.BackManage.API.Models.BannedRecord", null)
                        .WithMany("BannedInfos")
                        .HasForeignKey("BannedRecordId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_info_record");
                });

            modelBuilder.Entity("Zhouxieyi.evaluationSiteOnContainers.Services.BackManage.API.Models.BannedRecord", b =>
                {
                    b.Navigation("BannedInfos");
                });
#pragma warning restore 612, 618
        }
    }
}
